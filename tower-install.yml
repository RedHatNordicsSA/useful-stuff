- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/vars.yml
  tasks:
  - name: Download Tower user data file
    get_url:
      url: https://raw.githubusercontent.com/mglantz/ansible-roadshow/master/content/scripts/tower-prep.sh
      dest: /tmp/tower-prep.sh
      validate_certs: no
      force: yes
   
          
  - name: Install the VM
    some_module:

    - name: Install Python Pip
      yum:
        name: python2-pip
        state: present

    - name: Check if Ansible Lint is installed
      stat:
        path: /bin/ansible-lint
      register: ansible_lint

    - name: Install Ansible Lint
      pip:
        name: ansible-lint
        state: present
      when: ansible_lint.stat.exists == False

    - name: Ensure /opt/tower is created
      file:
        path: /opt/tower
        state: directory

    - name: Unzip the latest tower software
      unarchive:
        src: "https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz"
        dest: /opt/tower
        remote_src: yes

    - name: Find installer absolute path
      shell: "ls /opt/tower/ansible-tower-setup-*/setup.sh"
      register: tower_installer_path

    - name: Find base path for installer
      shell: "find /opt/tower/ansible-tower-setup* -maxdepth 0 -type d"
      register: tower_base_path

    - name: Find inventory absolute path
      shell: "ls /opt/tower/ansible-tower-setup-*/inventory"
      register: tower_inventory_path

    - name: Print installer path
      debug:
         msg: "setup path: {{ tower_installer_path.stdout }}"

    - name: Inventory path
      debug:
        msg: "inventory path: {{ tower_inventory_path.stdout }}"

    - name: Base path
      debug:
        msg: "Base path: {{ tower_base_path.stdout }}"

    - name: Set admin password in inventory file
      lineinfile:
        path: "{{ tower_inventory_path.stdout }}"
        regexp: '^admin_password='
        line: 'admin_password=redhat123'

    - name: Set PostgreSQL password in inventory file
      lineinfile:
        path: "{{ tower_inventory_path.stdout }}"
        regexp: '^pg_password='
        line: 'pg_password=redhat123'

    - name: Set rabbitmq password in inventory file
      lineinfile:
        path: "{{ tower_inventory_path.stdout }}"
        regexp: '^rabbitmq_password='
        line: 'rabbitmq_password=redhat123'

    - name: Run Ansible Tower installer
      shell: "{{tower_installer_path.stdout}} -i {{tower_inventory_path.stdout}}"
      
    - name: Run Ansible Tower and load old database
      shell: "{{tower_installer_path.stdout}} -i {{tower_inventory_path.stdout}} -r /path/to/backup-file"

    - name: Check if Tower CLI is installed
      stat:
        path: /bin/tower-cli
      register: tower_cli

    - name: Install Tower CLI
      pip:
        name: ansible-tower-cli
        state: present
      when: tower_cli.stat.exists == False
        

    
    
